{
	"info": {
		"_postman_id": "35756616-554f-484f-80ab-14d46bed1a5c",
		"name": "Devsu-Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9329363"
	},
	"item": [
		{
			"name": "Collection",
			"item": [
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"let response = pm.response.json();",
									"pm.environment.set(\"clienteId\", response.clienteId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contrasena\": \"123456\",\n  \"identificacion\": \"{{clienteIdentificacion}}\",\n  \"nombre\": \"John Doe\",\n  \"genero\": \"masculino\",\n  \"edad\": 20,\n  \"direccion\": \"direccion prueba\",\n  \"telefono\": \"telefono prueba\",\n  \"estado\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-clientes}}/api/clientes",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-clientes}}",
							"path": [
								"api",
								"clientes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "clientes/{{clienteId:uuid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-clientes}}/api/clientes/{{clienteId}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-clientes}}",
							"path": [
								"api",
								"clientes",
								"{{clienteId}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clienteId\": \"{{clienteId}}\",\n  \"contrasena\": \"123456\",\n  \"identificacion\": \"{{clienteIdentificacion}}\",\n  \"nombre\": \"John Doe N Feast\",\n  \"genero\": \"masculino\",\n  \"edad\": 30,\n  \"direccion\": \"direccion prueba2\",\n  \"telefono\": \"telefono prueba2\",\n  \"estado\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-clientes}}/api/clientes",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-clientes}}",
							"path": [
								"api",
								"clientes"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"clienteId\": \"{{clienteId}}\",\r\n  \"contrasena\": \"9999\",\r\n  \"nombre\": \"John Doe N. Martinez\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-clientes}}/api/clientes",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-clientes}}",
							"path": [
								"api",
								"clientes"
							]
						}
					},
					"response": []
				},
				{
					"name": "cuentas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"let response = pm.response.json();",
									"pm.environment.set(\"numeroCuenta\", response.numeroCuenta);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numeroCuenta\": \"{{numeroCuenta}}\",\n  \"tipo\": \"ahorros\",\n  \"saldoInicial\": 100,\n  \"estado\": true,\n  \"clienteId\": \"{{clienteId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/cuentas",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"cuentas"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "cuentas/{numeroCuenta:string}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/cuentas/{{numeroCuenta}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"cuentas",
								"{{numeroCuenta}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "cuentas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numeroCuenta\": \"{{numeroCuenta}}\",\n  \"tipo\": \"corriente\",\n  \"saldoInicial\": 200,\n  \"estado\": true,\n  \"clienteId\": \"{{clienteId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/cuentas",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"cuentas"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "cuentas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"numeroCuenta\": \"{{numeroCuenta}}\",\r\n  \"saldoInicial\": 2000,\r\n  \"clienteId\": \"{{clienteId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/cuentas",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"cuentas"
							]
						}
					},
					"response": []
				},
				{
					"name": "movimientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"let response = pm.response.json();",
									"pm.environment.set(\"movimientoId\", response.movimientoId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numeroCuenta\": \"{{numeroCuenta}}\",\n  \"tipo\": \"deposito\",\n  \"movimiento\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/movimientos",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"movimientos"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "movimientos/{{movimientoId:uuid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/movimientos/{{movimientoId}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"movimientos",
								"{{movimientoId}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "movimientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"movimientoId\": \"{{movimientoId}}\",\n  \"tipo\": \"deposito\",\n  \"movimiento\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/movimientos",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"movimientos"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "movimientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"movimientoId\": \"{{movimientoId}}\",\r\n  \"tipo\": \"retiro\",\r\n  \"movimiento\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/movimientos",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"movimientos"
							]
						}
					},
					"response": []
				},
				{
					"name": "reportes/{{clienteId:uuid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"today\", new Date());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/reportes?clienteId={{clienteId}}&fechaInicio={{today}}&fechaFin={{today}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"reportes"
							],
							"query": [
								{
									"key": "clienteId",
									"value": "{{clienteId}}"
								},
								{
									"key": "fechaInicio",
									"value": "{{today}}",
									"description": "puede ser nulo por defecto 1 mes antes a la fecha de fin"
								},
								{
									"key": "fechaFin",
									"value": "{{today}}",
									"description": "puede ser nulo, por defecto hoy"
								},
								{
									"key": "pagina",
									"value": "0",
									"description": "puede ser nulo, por defecto 0",
									"disabled": true
								},
								{
									"key": "tamanoPagina",
									"value": "100",
									"description": "puede ser nulo, por defecto 10",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "movimientos/{{movimientoId:uuid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/movimientos/{{movimientoId}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"movimientos",
								"{{movimientoId}}"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "cuentas/{numeroCuenta:string}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-cuentas}}/api/cuentas/{{numeroCuenta}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-cuentas}}",
							"path": [
								"api",
								"cuentas",
								"{{numeroCuenta}}"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "clientes/{{clienteId:uuid}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{servidor}}:{{puerto-ms-clientes}}/api/clientes/{{clienteId}}",
							"protocol": "http",
							"host": [
								"{{servidor}}"
							],
							"port": "{{puerto-ms-clientes}}",
							"path": [
								"api",
								"clientes",
								"{{clienteId}}"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "servidor",
			"value": "localhost",
			"type": "default"
		},
		{
			"key": "puerto-ms-cuentas",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "puerto-ms-clientes",
			"value": "8090",
			"type": "string"
		}
	]
}